version: '3.7'
services:
  web:
    container_name: ${DOCKER_PREFIX:-rdc}_web
    build:
      context: containers/docker-web
    image: ${DOCKER_PREFIX:-rdc}_web
    env_file:
      - .env
    restart: always
    depends_on:
      - db
    ports:
      - "${WEB_PORT:-80}:80"
    volumes:
      - ${WEB_OVERRIDES:-./redcap-overrides/web}:/etc/container-config-override
      - ${WEBROOT_DIR:-../www}:/var/www/html:delegated
      - ${LOGS_DIR:-../logs}:/var/log/apache2:delegated
    networks:
      - redcap_network
# You can prevent your REDCap from accessing certain sites (like twilio) using these settings
# If you leave these commented out, you WILL be able to use Twilio from your docker
#    extra_hosts:
#      - "api.twilio.com:127.0.0.1"
#      - "www.twilio.com:127.0.0.1"
#      - "taskrouter.twilio.com:127.0.0.1"
#      - "lookups.twilio.com:127.0.0.1"
#      - "event-bridge.twilio.com:127.0.0.1"

  db:
    container_name: ${DOCKER_PREFIX:-rdc}_db
    build: containers/docker-mysql
    image: ${DOCKER_PREFIX:-rdc}_db
    env_file:
      - .env
    restart: always
    volumes:
      - ${MYSQL_DIR:-mysql-volume}:/var/lib/mysql
      - ${LOGS_DIR:-../logs}:/var/log/mysql:delegated
      - ${MYSQL_OVERRIDES:-./redcap-overrides/mysql/config}:/etc/mysql/mysql.conf.d
      - ${MYSQL_SCRIPTS:-./redcap-overrides/mysql/scripts}:/docker-entrypoint-initdb.d/
    ports:
     - "${MYSQL_PORT:-3306}:3306"
    networks:
      - redcap_network

  cron:
    container_name: ${DOCKER_PREFIX:-rdc}_cron
    build: containers/docker-cron
    image: ${DOCKER_PREFIX:-rdc}_cron
    restart: always
    env_file:
      - .env
    depends_on:
      - web
      - db
    volumes:
      - ${CRON_LOGROTATE_DIR:-./redcap-overrides/cron/logrotate}:/etc/logrotate.d
      - ${LOGS_DIR:-../logs}:/logs-dir:delegated
    networks:
      - redcap_network

  mailhog:
    container_name: ${DOCKER_PREFIX:-rdc}_mailhog
    build: containers/docker-mailhog
    image: ${DOCKER_PREFIX:-rdc}_mailhog
    restart: always
    env_file:
      - .env
    depends_on:
      - web
#    ports:
#      - "${MAILHOG_PORT:-8025}:8025"
    volumes:
      - ${MAILHOG_DIR:-mailhog-volume}:/maildir
      - ${MAILHOG_OUTGOING_SMTP_FILE:-./redcap-overrides/mailhog/outgoing_smtp.json}:/outgoing_smtp.json
    environment:
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /maildir
      MH_OUTGOING_SMTP: /outgoing_smtp.json
      MH_UI_WEB_PATH: mailhog
    networks:
      - redcap_network

  # THIS CONTAINER IS OPTIONAL IF YOU WANT TO HAVE PHPMYADMIN - OTHERWISE COMMENT IT OUT
  phpmyadmin:
    container_name: ${DOCKER_PREFIX}_phpmyadmin
    image: phpmyadmin/phpmyadmin:fpm-alpine
    env_file:
      - .env
    depends_on:
      - web
      - db
    #restart: always
    volumes:
      - ${PHPMYADMIN_PHP_OVERRIDES}:/usr/local/etc/php/conf.d/uploads.ini
#    ports:
#      - "${PHPMYADMIN_PORT:-8080}:80"
    command: ${PHPMYADMIN_STARTUP:-php-fpm}
    networks:
      - redcap_network

volumes:
  mysql-volume:
    name: "${DOCKER_PREFIX:-rdc}_mysql-volume"
  logs-volume:
    name: "${DOCKER_PREFIX:-rdc}_logs-volume"
  mailhog-volume:
    name: "${DOCKER_PREFIX:-rdc}_mailhog-volume"

networks:
  redcap_network:
    name: "${DOCKER_PREFIX:-rdc}_redcap_network"